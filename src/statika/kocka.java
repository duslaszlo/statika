/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package statika;

import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;

/**
 *
 * @author SD-LEAP
 */
public class kocka extends javax.swing.JInternalFrame {

    /**
     * Creates new form kocka
     */
    kockaadatok kockaracs = new kockaadatok();

    public kocka() {
        initComponents();
        kockaracs.nev = "Kockarács";
        kockaracs.kepnagyitas = 0.75f;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        x_db = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        y_db = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        z_db = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        x_hossz = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        y_hossz = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        z_hossz = new javax.swing.JTextField();
        indito = new javax.swing.JButton();
        nezet = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        csomopontszam = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        rudszam = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Kocka váztervezés");
        setPreferredSize(new java.awt.Dimension(1000, 700));

        jLabel1.setText("X:");

        x_db.setText("2");

        jLabel2.setText("Y:");

        y_db.setText("2");

        jLabel3.setText("Z:");

        z_db.setText("2");

        jLabel4.setText("Darabszámok:");

        jLabel5.setText("Rácselem-hosszak:");

        jLabel6.setText("X:");

        x_hossz.setText("10");

        jLabel7.setText("Y:");

        y_hossz.setText("20");

        jLabel8.setText("Z:");

        z_hossz.setText("30");

        indito.setText("Lássuk");
        indito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inditoActionPerformed(evt);
            }
        });

        nezet.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                nezetMouseWheelMoved(evt);
            }
        });
        nezet.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                nezetMouseDragged(evt);
            }
        });

        jLabel9.setText("Csomópontszámok:");

        csomopontszam.setEditable(false);
        csomopontszam.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel10.setText("db");

        jLabel11.setText("Rúdszámok:");

        rudszam.setEditable(false);
        rudszam.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel12.setText("db");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/statika/exit1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel2)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(y_db))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel3)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(z_db, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(x_db, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jLabel5)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(z_hossz))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(y_hossz))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(x_hossz, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addComponent(indito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator1))
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(csomopontszam)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rudszam, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel10)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)))
                .addComponent(nezet, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(x_db, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(y_db, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(z_db, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(x_hossz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(y_hossz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(z_hossz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(indito, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(csomopontszam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rudszam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(nezet, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inditoActionPerformed
        // TODO add your handling code here:
        kockaracs.rudindex = 0;
        kockaracs.csomopontindex = 0;
        csomopontszam.setText("");
        rudszam.setText("");
        int xkoord = 0, ykoord = 0, zkoord = 0;
        int kistavolsag, nagytavolsag;
        if (x_db.getText() != "" && x_db.getText() != "0"
                && y_db.getText() != "" && y_db.getText() != "0"
                && z_db.getText() != "" && z_db.getText() != "0"
                && x_hossz.getText() != "" && x_hossz.getText() != "0"
                && y_hossz.getText() != "" && y_hossz.getText() != "0"
                && z_hossz.getText() != "" && z_hossz.getText() != "0") {
            // A csomópontok meghatározása
            //System.out.println(x_hossz.getText());
            for (int i = 0; i <= Integer.parseInt(x_db.getText()); i++) {
                xkoord = i * Integer.parseInt(x_hossz.getText());
                for (int j = 0; j <= Integer.parseInt(y_db.getText()); j++) {
                    ykoord = j * Integer.parseInt(y_hossz.getText());
                    for (int k = 0; k <= Integer.parseInt(z_db.getText()); k++) {
                        zkoord = k * Integer.parseInt(z_hossz.getText());
                        kockaracs.csomopontindex++;
                        kockaracs.csomopont[kockaracs.csomopontindex][0] = xkoord;
                        kockaracs.csomopont[kockaracs.csomopontindex][1] = ykoord;
                        kockaracs.csomopont[kockaracs.csomopontindex][2] = zkoord;
                    }
                }
            }
            /*
             kistavolsag = Integer.parseInt(x_hossz.getText())
                    + Integer.parseInt(y_hossz.getText())
                    + Integer.parseInt(z_hossz.getText());
            for (int i = 1; i <= kockaracs.csomopontindex - 1; i++) {
                for (int j = i + 1; j <= kockaracs.csomopontindex; j++) {
                    nagytavolsag = Math.abs(kockaracs.csomopont[i][0] - kockaracs.csomopont[j][0])
                            + Math.abs(kockaracs.csomopont[i][1] - kockaracs.csomopont[j][1])
                            + Math.abs(kockaracs.csomopont[i][2] - kockaracs.csomopont[j][2]);
                    if (nagytavolsag <= kistavolsag) {
                        System.out.println("Nagytávolság:"+nagytavolsag+"  kistavolsag:"+kistavolsag);
                        kockaracs.rud_beiro(i, j);
                    }
                }
            }
             */
            // A rácsrudak meghatározása
            kistavolsag = Integer.parseInt(x_hossz.getText())
                    + Integer.parseInt(z_hossz.getText());
            for (int i = 1; i <= kockaracs.csomopontindex - 1; i++) {
                for (int j = i + 1; j <= kockaracs.csomopontindex; j++) {
                    nagytavolsag = Math.abs(kockaracs.csomopont[i][0] - kockaracs.csomopont[j][0])
                            + Math.abs(kockaracs.csomopont[i][2] - kockaracs.csomopont[j][2]);
                    if ((nagytavolsag < kistavolsag) && (kockaracs.csomopont[i][1]==kockaracs.csomopont[j][1])) {
                        //System.out.println("Nagytávolság:"+nagytavolsag+"  kistavolsag:"+kistavolsag);
                        kockaracs.rud_beiro(i, j);
                    }
                }
            }            
            kistavolsag = Integer.parseInt(x_hossz.getText())
                    + Integer.parseInt(y_hossz.getText());
            for (int i = 1; i <= kockaracs.csomopontindex - 1; i++) {
                for (int j = i + 1; j <= kockaracs.csomopontindex; j++) {
                    nagytavolsag = Math.abs(kockaracs.csomopont[i][0] - kockaracs.csomopont[j][0])
                            + Math.abs(kockaracs.csomopont[i][1] - kockaracs.csomopont[j][1]);
                    if ((nagytavolsag < kistavolsag) && (kockaracs.csomopont[i][2]==kockaracs.csomopont[j][2])) {
                        //System.out.println("Nagytávolság:"+nagytavolsag+"  kistavolsag:"+kistavolsag);
                        kockaracs.rud_beiro(i, j);
                    }
                }
            }   
            kistavolsag = Integer.parseInt(z_hossz.getText())
                    + Integer.parseInt(y_hossz.getText());
            for (int i = 1; i <= kockaracs.csomopontindex - 1; i++) {
                for (int j = i + 1; j <= kockaracs.csomopontindex; j++) {
                    nagytavolsag = Math.abs(kockaracs.csomopont[i][2] - kockaracs.csomopont[j][2])
                            + Math.abs(kockaracs.csomopont[i][1] - kockaracs.csomopont[j][1]);
                    if ((nagytavolsag < kistavolsag) && (kockaracs.csomopont[i][0]==kockaracs.csomopont[j][0])) {
                        //System.out.println("Nagytávolság:"+nagytavolsag+"  kistavolsag:"+kistavolsag);
                        kockaracs.rud_beiro(i, j);
                    }
                }
            }
        }
        csomopontszam.setText(String.valueOf(kockaracs.csomopontindex));
        rudszam.setText(String.valueOf(kockaracs.rudindex));
        /*for (int i = 1; i <= kockaracs.csomopontindex - 1; i++) {
         System.out.println(" i:" + i + "  x:" + kockaracs.csomopont[i][0]
         + "  y:" + kockaracs.csomopont[i][1]
         + "  z:" + kockaracs.csomopont[i][2]);
         }
         for (int i = 1; i <= kockaracs.rudindex - 1; i++) {
         System.out.println(" i:" + i + "  kezd:" + kockaracs.rud[i][1]
         + "  vege:" + kockaracs.rud[i][2]);
         }*/
        kepkitevo();
    }//GEN-LAST:event_inditoActionPerformed

    private void kepkitevo() {
        kockaracs.pngrajz();
        ImageIcon icon = new ImageIcon(kockaracs.bi);
        icon.getImage().flush();
        nezet.setIcon(icon);
        nezet.updateUI();
    }

    private void nezetMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nezetMouseDragged
        // TODO add your handling code here:
        if (SwingUtilities.isLeftMouseButton(evt)) {
            // A forgatás
            if ((kockaracs.mx0 == 0) || (kockaracs.my0 == 0)) {
                kockaracs.mx0 = evt.getX();
                kockaracs.my0 = evt.getY();
            } else {
                if (evt.getX() > kockaracs.mx0) {
                    kockaracs.forgatas[2]++;
                    if (kockaracs.forgatas[2] > 360) {
                        kockaracs.forgatas[2] = 0;
                    }
                    kockaracs.mx0 = evt.getX();
                }
                if (evt.getX() < kockaracs.mx0) {
                    kockaracs.forgatas[2]--;
                    if (kockaracs.forgatas[2] < 0) {
                        kockaracs.forgatas[2] = 360;
                    }
                    kockaracs.mx0 = evt.getX();
                }
                if (evt.getY() > kockaracs.my0) {
                    kockaracs.forgatas[3]--;
                    if (kockaracs.forgatas[3] < 0) {
                        kockaracs.forgatas[3] = 360;
                    }
                    kockaracs.my0 = evt.getY();
                }
                if (evt.getY() < kockaracs.my0) {
                    kockaracs.forgatas[3]++;
                    if (kockaracs.forgatas[3] > 360) {
                        kockaracs.forgatas[3] = 0;
                    }
                    kockaracs.my0 = evt.getY();
                }
                kepkitevo();
            }
        }
        if (SwingUtilities.isRightMouseButton(evt)) {
            //mozgatás                    
            if ((kockaracs.tx0 == 0) || (kockaracs.ty0 == 0)) {
                kockaracs.tx0 = evt.getX();
                kockaracs.ty0 = evt.getY();
            } else {
                if (evt.getX() > kockaracs.tx0) {
                    kockaracs.kepkozep[0]++;
                    kockaracs.tx0 = evt.getX();
                }
                if (evt.getX() < kockaracs.tx0) {
                    kockaracs.kepkozep[0]--;
                    kockaracs.tx0 = evt.getX();
                }
                if (evt.getY() > kockaracs.ty0) {
                    kockaracs.kepkozep[1]++;
                    kockaracs.ty0 = evt.getY();
                }
                if (evt.getY() < kockaracs.ty0) {
                    kockaracs.kepkozep[1]--;
                    kockaracs.ty0 = evt.getY();
                }
                kepkitevo();
            }
        }
        if (SwingUtilities.isMiddleMouseButton(evt)) {
            // Alaphelyzet visszaállítás
            kockaracs.kepkozep[0] = 0;
            kockaracs.kepkozep[1] = 0;
            kockaracs.forgatas[2] = 0;
            kockaracs.forgatas[3] = 0;
            kockaracs.kepnagyitas = 1;
            kepkitevo();
        }
    }//GEN-LAST:event_nezetMouseDragged

    private void nezetMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_nezetMouseWheelMoved
        // TODO add your handling code here:
        if (evt.getWheelRotation() < 0) {
            kockaracs.kepnagyitas /= 0.5;
        } else {
            kockaracs.kepnagyitas *= 0.5;
        }
        kepkitevo();
    }//GEN-LAST:event_nezetMouseWheelMoved

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField csomopontszam;
    private javax.swing.JButton indito;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton nezet;
    private javax.swing.JTextField rudszam;
    private javax.swing.JTextField x_db;
    private javax.swing.JTextField x_hossz;
    private javax.swing.JTextField y_db;
    private javax.swing.JTextField y_hossz;
    private javax.swing.JTextField z_db;
    private javax.swing.JTextField z_hossz;
    // End of variables declaration//GEN-END:variables
}
