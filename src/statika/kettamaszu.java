/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * kettamaszu.java
 *
 * Created on 2011.08.22., 12:00:37
 */
package statika;

import Entities.Projectek;
import Entities.Szelveny;
import Entities.Tartoerok;
import Entities.Tartok;
import Hibernate.HibernateUtil;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import org.hibernate.Session;

/**
 *
 * @author SD-LEAP
 */
public class kettamaszu extends javax.swing.JInternalFrame {
// A változók deklarálása

    tartoadatok tarto = new tartoadatok();
    Query query;
    Date now = new Date();
    Session session = HibernateUtil.getSessionFactory().openSession();

    /**
     * Creates new form kettamaszu
     */
    public kettamaszu() {

        initComponents();
        session.beginTransaction();
        jTabbedPane1.setEnabled(false);
        feszultsegek.setEnabled(false);
        ero_nyomatek.setEnabled(false);
        alakvaltozas.setEnabled(false);
        tarto.parancs = "FROM Projectek";
        //System.out.println(parancs);
        List<Projectek> projectek = session.createQuery(tarto.parancs).list();
        for (int i = 0; i < projectek.size(); i++) {
            projekt.addItem(projectek.get(i).getProjekt());
        }
        tarto.parancs = "FROM Projectek Where aktiv = '1'";
        //System.out.println(parancs);
        List<Projectek> project = session.createQuery(tarto.parancs).list();
        for (int i = 0; i < project.size(); i++) {
            tarto.ProjektNev = project.get(i).getProjekt();
            projekt.setSelectedItem(project.get(i).getProjekt());
        }
       
        //System.out.println("Az aktuális projekt: " + tarto.ProjektNev);
        // A tartónevek (jComboBox1) feltöltése        
        tarto.parancs = "FROM Tartok where projekt = '" + tarto.ProjektNev + "'";
        //System.out.println(parancs);
        List<Tartok> tartonevlista = session.createQuery(tarto.parancs).list();
        for (int i = 0; i < tartonevlista.size(); i++) {
            tartonevek_lista.addItem(tartonevlista.get(i).getTartonev());
        }
        // A szelvények feltöltése
        tarto.parancs = "FROM Szelveny order by nev";
        //System.out.println(parancs);
        List<Szelveny> szelvenylista = session.createQuery(tarto.parancs).list();
        szelvenyek_listaja.addItem("Válassz");
        for (int i = 0; i < szelvenylista.size(); i++) {
            // A szelvénytár beolvasása
            szelvenyek_listaja.addItem(szelvenylista.get(i).getNev());
        }
        session.getTransaction().commit();
        session.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Rajzmód = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        tartonevek_lista = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        tarto_kivalasztas = new javax.swing.JButton();
        pngrajz = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        szelvenyek_listaja = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        konzol2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        konzol1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        TartoHossz = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tartoadat_modositas = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        reszletesadatok = new javax.swing.JTable();
        metszet_jelolo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        erok_modositasa = new javax.swing.JButton();
        Ero_hozzaadas = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        ujero = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        ujerohely = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        erok = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        terhek_modositasa = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        terhelesek = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        ujmegoszlo = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        ujmegoszlohely = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        ujmegoszlohossz = new javax.swing.JTextField();
        Megoszlo_hozzaadas = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nyomatekok_modositasa = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        nyomatekok = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        ujnyomatek = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        ujnyomatekhely = new javax.swing.JTextField();
        Nyomatek_hozzaadas = new javax.swing.JButton();
        project_valtoztatas = new javax.swing.JButton();
        projekt = new javax.swing.JComboBox();
        feszultsegek = new javax.swing.JCheckBox();
        alakvaltozas = new javax.swing.JCheckBox();
        ero_nyomatek = new javax.swing.JCheckBox();
        Kilepes = new javax.swing.JButton();

        setClosable(true);
        setForeground(java.awt.Color.white);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Kéttámaszú tartó nyíróerő, nyomatéki és lehajlási ábrái");
        setPreferredSize(new java.awt.Dimension(1200, 600));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("A tartó neve:");

        tartonevek_lista.setMaximumRowCount(4);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Projektnév:");

        tarto_kivalasztas.setText("Tartó kiválasztás");
        tarto_kivalasztas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tarto_kivalasztasActionPerformed(evt);
            }
        });

        jLabel26.setText("Szelvény:");

        jLabel9.setText("Konzol2:");

        jLabel11.setText("cm");

        jLabel10.setText("cm");

        jLabel8.setText("Konzol1:");

        jLabel1.setText("Tartóhossz:");

        jLabel7.setText("cm");

        tartoadat_modositas.setText("Módosít");
        tartoadat_modositas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tartoadat_modositasActionPerformed(evt);
            }
        });

        reszletesadatok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Hely (cm)", "T (KN)", "M (KNcm)", "Szigma (KN/cm2)", "Tau (KN/cm2)", "Összetett (KN/cm2)", "Lehajlas (cm)", "Szögfordulás (fok)", "A (cm2)", "Ix (cm4)", "Sx (cm3)", "v (cm)", "Kx (cm3)", "Megjelölés"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(reszletesadatok);

        metszet_jelolo.setText("Megjelöl");
        metszet_jelolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metszet_jeloloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TartoHossz, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                            .addComponent(konzol1))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(konzol2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(szelvenyek_listaja, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(tartoadat_modositas, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(metszet_jelolo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TartoHossz)
                    .addComponent(jLabel7)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(szelvenyek_listaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tartoadat_modositas))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(konzol1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(konzol2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(metszet_jelolo)
                .addGap(30, 30, 30))
        );

        jTabbedPane1.addTab("Tartóadatok", jPanel1);

        erok_modositasa.setText("Módosít");
        erok_modositasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erok_modositasaActionPerformed(evt);
            }
        });

        Ero_hozzaadas.setText("Hozzáad");
        Ero_hozzaadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ero_hozzaadasActionPerformed(evt);
            }
        });

        jLabel12.setText("Új erő:");

        jLabel14.setText("Hely:");

        erok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Erő ", "Hely ", "Törlés"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        erok.setShowHorizontalLines(false);
        jScrollPane1.setViewportView(erok);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Erők (kN és cm):");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(erok_modositasa, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(12, 12, 12)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ujerohely)
                            .addComponent(ujero, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Ero_hozzaadas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(erok_modositasa)
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ujero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(ujerohely, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ero_hozzaadas, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Terhelő erők", jPanel2);

        terhek_modositasa.setText("Módosít");
        terhek_modositasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terhek_modositasaActionPerformed(evt);
            }
        });

        terhelesek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Teher", "Hely ", "Hossz ", "Profil", "Törlés"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(terhelesek);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Megoszló terhek (kN/cm  és cm):");

        jLabel20.setText("Új teher:");

        jLabel19.setText("Hely:");

        jLabel18.setText("Hossz:");

        Megoszlo_hozzaadas.setText("Hozzáad");
        Megoszlo_hozzaadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Megoszlo_hozzaadasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(terhek_modositasa, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addGap(18, 18, 18)
                                    .addComponent(ujmegoszlohossz, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel19)
                                            .addGap(22, 22, 22)))
                                    .addGap(3, 3, 3)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(ujmegoszlo, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                        .addComponent(ujmegoszlohely))))
                            .addGap(177, 177, 177)
                            .addComponent(Megoszlo_hozzaadas, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 29, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ujmegoszlo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(ujmegoszlohely)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(ujmegoszlohossz, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(terhek_modositasa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Megoszlo_hozzaadas)
                        .addGap(30, 30, 30))))
        );

        jTabbedPane1.addTab("Megoszló terhek", jPanel3);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Nyomatékok (kNcm és cm):");

        nyomatekok_modositasa.setText("Módosít");
        nyomatekok_modositasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nyomatekok_modositasaActionPerformed(evt);
            }
        });

        nyomatekok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nyomaték ", "Hely", "Törlés"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(nyomatekok);

        jLabel22.setText("Új nyomaték:");

        jLabel23.setText("Hely:");

        Nyomatek_hozzaadas.setText("Hozzáad");
        Nyomatek_hozzaadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nyomatek_hozzaadasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(nyomatekok_modositasa, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel23)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ujnyomatekhely)
                            .addComponent(ujnyomatek, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                        .addComponent(Nyomatek_hozzaadas, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                .addComponent(nyomatekok_modositasa)
                .addGap(66, 66, 66)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ujnyomatek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ujnyomatekhely, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(Nyomatek_hozzaadas))
                .addGap(21, 21, 21))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(161, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Nyomatékok", jPanel4);

        project_valtoztatas.setText("Másik projekt");
        project_valtoztatas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                project_valtoztatasActionPerformed(evt);
            }
        });

        Rajzmód.add(feszultsegek);
        feszultsegek.setText("Feszültségek");
        feszultsegek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feszultsegekActionPerformed(evt);
            }
        });

        Rajzmód.add(alakvaltozas);
        alakvaltozas.setText("Alakváltozás");
        alakvaltozas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alakvaltozasActionPerformed(evt);
            }
        });

        Rajzmód.add(ero_nyomatek);
        ero_nyomatek.setSelected(true);
        ero_nyomatek.setText("Erő/Nyomaték");
        ero_nyomatek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ero_nyomatekActionPerformed(evt);
            }
        });

        Kilepes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/statika/exit1.png"))); // NOI18N
        Kilepes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KilepesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ero_nyomatek))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(projekt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(project_valtoztatas))
                                    .addComponent(tartonevek_lista, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(feszultsegek)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(alakvaltozas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tarto_kivalasztas))))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pngrajz, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(Kilepes, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pngrajz, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(project_valtoztatas)
                            .addComponent(projekt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tartonevek_lista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(tarto_kivalasztas))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ero_nyomatek)
                                    .addComponent(feszultsegek)
                                    .addComponent(alakvaltozas))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Kilepes, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reszletesadatok_tablatorlo() {
        DefaultTableModel tableModel = (DefaultTableModel) reszletesadatok.getModel();
        int i = tableModel.getRowCount();
        if (i > 0) {
            for (int k = 0; k < i; k++) {
                tableModel.removeRow(0);
            }
        }
    }

    private void reszletesadatok_tablatolto() {
        DefaultTableModel tableModel = (DefaultTableModel) reszletesadatok.getModel();
        reszletesadatok_tablatorlo();
        for (int i = 0; i < tarto.metszekszam; i++) {
            String[] data = new String[15];
            data[0] = String.valueOf(i);                        // Sorszám
            data[1] = String.valueOf((i * (tarto.tarto.get(0).getHossz() + tarto.tarto.get(0).getKonzol1() + tarto.tarto.get(0).getKonzol2())) / tarto.metszekszam);    // A metszéki hely
            data[2] = String.valueOf(tarto.metszekek.get(i).getNyiroero());    // Nyíróerő            
            data[3] = String.valueOf(tarto.metszekek.get(i).getNyomatek());    // Nyomaték
            data[4] = String.valueOf(tarto.metszekek.get(i).getSzigma());    // Szigma
            data[5] = String.valueOf(tarto.metszekek.get(i).getTau());    // Tau
            data[6] = String.valueOf(tarto.metszekek.get(i).getOsszehasonlito_szigma());    // Összetett feszültség
            data[7] = String.valueOf(tarto.metszekek.get(i).getLehajlas());    // Lehajlás
            data[8] = String.valueOf(tarto.metszekek.get(i).getSzogfordulas());    // Szögfordulás
            data[9] = String.valueOf(tarto.metszekek.get(i).getA());    // Terület (A)
            data[10] = String.valueOf(tarto.metszekek.get(i).getIx());    // Inercia (Ix)
            data[11] = String.valueOf(tarto.metszekek.get(i).getSx());    // Statikai nyomaték (Sx)
            data[12] = String.valueOf(tarto.metszekek.get(i).getV());    // Gerincvastagság
            data[13] = String.valueOf(tarto.metszekek.get(i).getKx());    // Keresztmetszeti jellemző (Kx)            
            tableModel.addRow(data);
            if (tarto.metszekek.get(i).getKijelzes() == 1) {
                tableModel.setValueAt(true, i, 14);
            } else {
                tableModel.setValueAt(false, i, 14);
            }
        }
        // Az oszlop adatainak középre igazítása
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(TartoHossz.CENTER);
        for (int i = 0; i < 15; i++) {
            reszletesadatok.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
        // A tábla oszlopszélességei
        reszletesadatok.setAutoResizeMode(reszletesadatok.AUTO_RESIZE_OFF);
        reszletesadatok.getColumnModel().getColumn(0).setPreferredWidth(30);
        reszletesadatok.getColumnModel().getColumn(1).setPreferredWidth(40);
        reszletesadatok.getColumnModel().getColumn(2).setPreferredWidth(45);
        reszletesadatok.getColumnModel().getColumn(3).setPreferredWidth(45);
        reszletesadatok.getColumnModel().getColumn(4).setPreferredWidth(60);
        reszletesadatok.getColumnModel().getColumn(5).setPreferredWidth(60);
        reszletesadatok.getColumnModel().getColumn(6).setPreferredWidth(60);
        reszletesadatok.getColumnModel().getColumn(7).setPreferredWidth(50);
        reszletesadatok.getColumnModel().getColumn(8).setPreferredWidth(50);
        reszletesadatok.getColumnModel().getColumn(9).setPreferredWidth(40);
        reszletesadatok.getColumnModel().getColumn(10).setPreferredWidth(40);
        reszletesadatok.getColumnModel().getColumn(11).setPreferredWidth(40);
        reszletesadatok.getColumnModel().getColumn(12).setPreferredWidth(40);
        reszletesadatok.getColumnModel().getColumn(13).setPreferredWidth(40);
        reszletesadatok.getColumnModel().getColumn(14).setPreferredWidth(50);
        reszletesadatok.setModel(tableModel);
        reszletesadatok.setShowGrid(true);
    }

    private void eroadatok_tablatorlo() {
        DefaultTableModel tableModel = (DefaultTableModel) erok.getModel();
        int i = tableModel.getRowCount();
        if (i > 0) {
            for (int k = 0; k < i; k++) {
                tableModel.removeRow(0);
            }
        }
    }

    private void eroadatok_tablatolto() {
        Session session = HibernateUtil.getSessionFactory().openSession();
        DefaultTableModel tableModel = (DefaultTableModel) erok.getModel();
        eroadatok_tablatorlo();
        tarto.tartoerok.clear();
        tarto.parancs = "FROM Tartoerok where projekt ='" + tarto.ProjektNev + "' and tartonev = '" + tarto.megnevezes + "' and jelleg = '1' order by hely";
        //System.out.println(parancs);
        tarto.tartoerok = session.createQuery(tarto.parancs).list();
        for (int i = 0; i < tarto.tartoerok.size(); i++) {
            String[] data = new String[3];
            data[0] = String.valueOf(tarto.tartoerok.get(i).getId());
            data[1] = String.valueOf(tarto.tartoerok.get(i).getErtek());
            data[2] = String.valueOf(tarto.tartoerok.get(i).getHely());
            tableModel.addRow(data);
        }
        // Az oszlopok középre igazítása
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(konzol1.CENTER);
        for (int k = 0; k < 3; k++) {
            erok.getColumnModel().getColumn(k).setCellRenderer(centerRenderer);
        }
        erok.setModel(tableModel);
        erok.setShowGrid(true);
    }

    private void megoszloadatok_tablatorlo() {
        DefaultTableModel tableModel = (DefaultTableModel) terhelesek.getModel();
        int i = tableModel.getRowCount();
        if (i > 0) {
            for (int k = 0; k < i; k++) {
                tableModel.removeRow(0);
            }
        }
    }

    private void megoszloadatok_tablatolto() {
        Session session = HibernateUtil.getSessionFactory().openSession();
        DefaultTableModel tableModel = (DefaultTableModel) terhelesek.getModel();
        megoszloadatok_tablatorlo();
        tarto.tartoerok.clear();
        tarto.parancs = "FROM Tartoerok where projekt ='" + tarto.ProjektNev + "' and tartonev = '" + tarto.megnevezes + "' and jelleg = '2' order by hely";
        //System.out.println(parancs);
        tarto.tartoerok = session.createQuery(tarto.parancs).list();
        for (int i = 0; i < tarto.tartoerok.size(); i++) {
            String[] data = new String[5];
            data[0] = String.valueOf(tarto.tartoerok.get(i).getId());
            data[1] = String.valueOf(tarto.tartoerok.get(i).getErtek());
            data[2] = String.valueOf(tarto.tartoerok.get(i).getHely());
            data[3] = String.valueOf(tarto.tartoerok.get(i).getHossz());
            data[4] = tarto.tartoerok.get(i).getSzelveny();
            tableModel.addRow(data);
        }
        // Az oszlopok középre igazítása
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(konzol1.CENTER);
        for (int k = 0; k < 5; k++) {
            terhelesek.getColumnModel().getColumn(k).setCellRenderer(centerRenderer);
        }
        terhelesek.setModel(tableModel);
        terhelesek.setShowGrid(true);
    }

    private void nyomatekadatok_tablatorlo() {
        DefaultTableModel tableModel = (DefaultTableModel) nyomatekok.getModel();
        int i = tableModel.getRowCount();
        if (i > 0) {
            for (int k = 0; k < i; k++) {
                tableModel.removeRow(0);
            }
        }
    }

    private void nyomatekadatok_tablatolto() {
        Session session = HibernateUtil.getSessionFactory().openSession();
        DefaultTableModel tableModel = (DefaultTableModel) nyomatekok.getModel();
        nyomatekadatok_tablatorlo();
        tarto.tartoerok.clear();
        tarto.parancs = "FROM Tartoerok where projekt ='" + tarto.ProjektNev + "' and tartonev = '" + tarto.megnevezes + "' and jelleg = '3' order by hely";
        //System.out.println(parancs);
        tarto.tartoerok = session.createQuery(tarto.parancs).list();
        for (int i = 0; i < tarto.tartoerok.size(); i++) {
            String[] data = new String[3];
            data[0] = String.valueOf(tarto.tartoerok.get(i).getId());
            data[1] = String.valueOf(tarto.tartoerok.get(i).getErtek());
            data[2] = String.valueOf(tarto.tartoerok.get(i).getHely());
            tableModel.addRow(data);
        }
        // Az oszlopok középre igazítása
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(konzol1.CENTER);
        for (int k = 0; k < 3; k++) {
            nyomatekok.getColumnModel().getColumn(k).setCellRenderer(centerRenderer);
        }
        nyomatekok.setModel(tableModel);
        nyomatekok.setShowGrid(true);
    }

    private void Ero_hozzaadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ero_hozzaadasActionPerformed
        // TODO add your handling code here:
        Session session = HibernateUtil.getSessionFactory().openSession();
        Tartoerok ujtartoero = new Tartoerok();
        if (ujero.getText().length() > 0) {
            session.beginTransaction();
            ujtartoero.setProjekt(tarto.ProjektNev.toString());
            ujtartoero.setTartonev(tarto.megnevezes.toString());
            ujtartoero.setErtek(Float.parseFloat(ujero.getText()));
            ujtartoero.setHely(Float.parseFloat(ujerohely.getText()));
            ujtartoero.setHossz(0f);
            ujtartoero.setJelleg(1);
            ujtartoero.setFelvitel(now);
            ujtartoero.setSzelveny("");
            session.save(ujtartoero);
            eroadatok_tablatolto();
            session.getTransaction().commit();
            session.close();
            // A Jtable frissítése            
            ujero.setText("");
            ujerohely.setText("");
            rajzol(0);  // A tartó adatainak beolvasása és újrarajzoltatása
        }
    }//GEN-LAST:event_Ero_hozzaadasActionPerformed

    private void Megoszlo_hozzaadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Megoszlo_hozzaadasActionPerformed
        // TODO add your handling code here:
        Session session = HibernateUtil.getSessionFactory().openSession();
        Tartoerok ujtartoero = new Tartoerok();
        if (ujmegoszlo.getText().length() > 0) {
            session.beginTransaction();
            ujtartoero.setProjekt(tarto.ProjektNev.toString());
            ujtartoero.setTartonev(tarto.megnevezes.toString());
            ujtartoero.setErtek(Float.parseFloat(ujmegoszlo.getText()));
            ujtartoero.setHely(Float.parseFloat(ujmegoszlohely.getText()));
            ujtartoero.setHossz(Float.parseFloat(ujmegoszlohossz.getText()));
            ujtartoero.setJelleg(2);
            ujtartoero.setSzelveny("");
            ujtartoero.setFelvitel(now);
            session.save(ujtartoero);
            megoszloadatok_tablatolto();
            session.getTransaction().commit();
            session.close();
            // A Jtable frissítése            
            ujmegoszlo.setText("");
            ujmegoszlohely.setText("");
            ujmegoszlohossz.setText("");
            rajzol(0);  // A tartó adatainak beolvasása és újrarajzoltatása
        }
    }//GEN-LAST:event_Megoszlo_hozzaadasActionPerformed

    private void tarto_kivalasztasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tarto_kivalasztasActionPerformed
        // TODO add your handling code here:        
        jTabbedPane1.setEnabled(true);
        feszultsegek.setEnabled(true);
        ero_nyomatek.setEnabled(true);
        alakvaltozas.setEnabled(true);
        Session session = HibernateUtil.getSessionFactory().openSession();
        tarto.megnevezes = tartonevek_lista.getSelectedItem().toString();
        TartoHossz.setText("");
        konzol1.setText("");
        konzol2.setText("");
        TartoHossz.setEnabled(false);
        konzol1.setEnabled(false);
        konzol2.setEnabled(false);
        rajzol(0);  // A tartó adatainak beolvasása és újrarajzoltatása
        if (tarto.tarto.get(0).getTipus() == 1) {
            TartoHossz.setEnabled(true);
            TartoHossz.setText(String.valueOf(tarto.tarto.get(0).getHossz()));
        }
        if (tarto.tarto.get(0).getTipus() == 2) {
            konzol1.setEnabled(true);
            konzol1.setText(String.valueOf(tarto.tarto.get(0).getKonzol1()));
        }
        if (tarto.tarto.get(0).getTipus() == 3) {
            TartoHossz.setEnabled(true);
            TartoHossz.setText(String.valueOf(tarto.tarto.get(0).getHossz()));
            konzol1.setEnabled(true);
            konzol1.setText(String.valueOf(tarto.tarto.get(0).getKonzol1()));
            konzol2.setEnabled(true);
            konzol2.setText(String.valueOf(tarto.tarto.get(0).getKonzol2()));
        }
        szelvenyek_listaja.setSelectedItem(tarto.szelveny);
        // A terhek kijelzése
        // Az erők       
        session.beginTransaction();
        eroadatok_tablatolto();
        // A megoszló terhelések
        megoszloadatok_tablatolto();
        // A koncentrált nyomatékok
        nyomatekadatok_tablatolto();
        reszletesadatok_tablatolto();
        session.getTransaction().commit();
        session.close();
    }//GEN-LAST:event_tarto_kivalasztasActionPerformed

    private void rajzol(Integer kijelzes) {
        // A tartó metszékeinek számolása és az ábrák újrarajzolása
        // A tartó adatainak újrabeolvasása
        if (kijelzes == 0) {
            tarto.beolvas();   // Adatbeolvasás
            tarto.kiszamol();  // T,M,Tau, Szigma kiszámolása
        }
        TartoHossz.setText(String.valueOf(tarto.tarto.get(0).getHossz()));
        konzol1.setText(String.valueOf(tarto.tarto.get(0).getKonzol1()));
        konzol2.setText(String.valueOf(tarto.tarto.get(0).getKonzol2()));
        // A tartórajz kimenete PNG-be        
        tarto.pngrajz();
        // A PNG rajz visszaillesztése
        if (ero_nyomatek.isSelected()) {
            ImageIcon icon = new ImageIcon(tarto.bi1);
            icon.getImage().flush();
            pngrajz.setIcon(icon);
        }
        if (feszultsegek.isSelected()) {
            ImageIcon icon = new ImageIcon(tarto.bi2);
            icon.getImage().flush();
            pngrajz.setIcon(icon);
        }
        if (alakvaltozas.isSelected()) {
            ImageIcon icon = new ImageIcon(tarto.bi3);
            icon.getImage().flush();
            pngrajz.setIcon(icon);
        }
        pngrajz.updateUI();
    }

    protected ImageIcon createImageIcon(String path, String description) {
        java.net.URL imgURL = getClass().getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL, description);
        } else {
            System.err.println("Couldn't find file: " + path);
            return null;
        }
    }

    private void nyomatekok_modositasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nyomatekok_modositasaActionPerformed
        // TODO add your handling code here:
        Session session = HibernateUtil.getSessionFactory().openSession();
        DefaultTableModel tableModel = (DefaultTableModel) nyomatekok.getModel();
        if (tableModel.getRowCount() > 0) {
            session.beginTransaction();
            // A Jtable-ben lévő adatok módosítása
            int j = tableModel.getRowCount();
            for (int k = 0; k < j; k++) {
                String[] data = new String[3];
                data[0] = tableModel.getValueAt(k, 0).toString();
                data[1] = tableModel.getValueAt(k, 1).toString();
                data[2] = tableModel.getValueAt(k, 2).toString();
                if (tableModel.getValueAt(k, 3) != null) {
                    // Adattörlés                    
                    tarto.parancs = "delete from Tartoerok where id='" + data[0] + "'";
                    query = session.createQuery(tarto.parancs);
                    query.executeUpdate();
                } else {
                    // Adatmódosítás
                    tarto.parancs = "update Tartoerok set ertek='" + data[1] + "', ";
                    tarto.parancs = tarto.parancs + " hely='" + data[2] + "' ";
                    tarto.parancs = tarto.parancs + " where id = '" + data[0] + "'";
                    query = session.createQuery(tarto.parancs);
                    query.executeUpdate();
                }
            }
            // Jtable frissítése
            nyomatekadatok_tablatolto();
            session.getTransaction().commit();
            session.close();
            rajzol(0);  // A tartó adatainak beolvasása és újrarajzoltatása
        }
    }//GEN-LAST:event_nyomatekok_modositasaActionPerformed

    private void erok_modositasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erok_modositasaActionPerformed
        // TODO add your handling code here:
        Session session = HibernateUtil.getSessionFactory().openSession();
        DefaultTableModel tableModel = (DefaultTableModel) erok.getModel();
        if (tableModel.getRowCount() > 0) {
            session.beginTransaction();
            // A Jtable-ben lévő adatok módosítása
            int j = tableModel.getRowCount();
            for (int k = 0; k < j; k++) {
                String[] data = new String[3];
                data[0] = tableModel.getValueAt(k, 0).toString();
                data[1] = tableModel.getValueAt(k, 1).toString();
                data[2] = tableModel.getValueAt(k, 2).toString();
                if (tableModel.getValueAt(k, 3) != null) {
                    // Adattörlés                    
                    tarto.parancs = "delete from Tartoerok where id='" + data[0] + "'";
                    query = session.createQuery(tarto.parancs);
                    query.executeUpdate();
                } else {
                    // Adatmódosítás
                    tarto.parancs = "update Tartoerok set ertek='" + data[1] + "', ";
                    tarto.parancs = tarto.parancs + " hely='" + data[2] + "' ";
                    tarto.parancs = tarto.parancs + " where id = '" + data[0] + "'";
                    query = session.createQuery(tarto.parancs);
                    query.executeUpdate();
                }
            }
            // A Jtable frissítése
            eroadatok_tablatolto();
            session.getTransaction().commit();
            session.close();
            rajzol(0);  // A tartó adatainak beolvasása és újrarajzoltatása            
        }
    }//GEN-LAST:event_erok_modositasaActionPerformed

    private void terhek_modositasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terhek_modositasaActionPerformed
        // TODO add your handling code here:
        Session session = HibernateUtil.getSessionFactory().openSession();
        DefaultTableModel tableModel = (DefaultTableModel) terhelesek.getModel();
        if (tableModel.getRowCount() > 0) {
            session.beginTransaction();
            // A Jtable-ben lévő adatok módosítása
            int j = tableModel.getRowCount();
            for (int k = 0; k < j; k++) {
                String[] data = new String[5];
                data[0] = tableModel.getValueAt(k, 0).toString();
                data[1] = tableModel.getValueAt(k, 1).toString();
                data[2] = tableModel.getValueAt(k, 2).toString();
                data[3] = tableModel.getValueAt(k, 3).toString();
                if (tableModel.getValueAt(k, 5) != null) {
                    // Adattörlés                    
                    tarto.parancs = "delete from Tartoerok where id='" + data[0] + "'";
                    query = session.createQuery(tarto.parancs);
                    query.executeUpdate();
                } else {
                    // Adatmódosítás
                    tarto.parancs = "update Tartoerok set ertek='" + data[1] + "', ";
                    tarto.parancs = tarto.parancs + " hely='" + data[2] + "', ";
                    tarto.parancs = tarto.parancs + " hossz='" + data[3] + "' ";
                    tarto.parancs = tarto.parancs + " where id = '" + data[0] + "'";
                    query = session.createQuery(tarto.parancs);
                    query.executeUpdate();
                }
            }
            // A Jtable frissítése
            megoszloadatok_tablatolto();
            session.getTransaction().commit();
            session.close();
            rajzol(0);  // A tartó adatainak beolvasása és újrarajzoltatása
        }
    }//GEN-LAST:event_terhek_modositasaActionPerformed

    private void Nyomatek_hozzaadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nyomatek_hozzaadasActionPerformed
        // TODO add your handling code here:    
        Session session = HibernateUtil.getSessionFactory().openSession();
        Tartoerok ujtartoero = new Tartoerok();
        if (ujnyomatek.getText().length() > 0) {
            session.beginTransaction();
            ujtartoero.setSzelveny("");
            ujtartoero.setProjekt(tarto.ProjektNev.toString());
            ujtartoero.setTartonev(tarto.megnevezes.toString());
            ujtartoero.setErtek(Float.parseFloat(ujnyomatek.getText()));
            ujtartoero.setHossz(0f);
            ujtartoero.setHely(Float.parseFloat(ujnyomatekhely.getText()));
            ujtartoero.setJelleg(3);
            ujtartoero.setFelvitel(now);
            session.save(ujtartoero);
            // A Jtable frissítése
            nyomatekadatok_tablatolto();
            session.getTransaction().commit();
            session.close();
            ujnyomatek.setText("");
            ujnyomatekhely.setText("");
            rajzol(0);  // A tartó adatainak beolvasása és újrarajzoltatása
        }
    }//GEN-LAST:event_Nyomatek_hozzaadasActionPerformed

    private void tartoadat_modositasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tartoadat_modositasActionPerformed
        // TODO add your handling code here:
        // A Tartó dimenzionális adatainak megváltoztatása
        Session session = HibernateUtil.getSessionFactory().openSession();
        Tartoerok ujtartoero = new Tartoerok();
        tarto.tarto.get(0).setHossz(Float.parseFloat(TartoHossz.getText()));
        session.beginTransaction();
        tarto.parancs = "update Tartok set";
        if (tarto.tarto.get(0).getTipus() == 1) {
            tarto.parancs = tarto.parancs + " hossz='" + TartoHossz.getText() + "' ";
        }
        if (tarto.tarto.get(0).getTipus() == 2) {
            tarto.parancs = tarto.parancs + " konzol1='" + konzol1.getText() + "' ";
        }
        if (tarto.tarto.get(0).getTipus() == 3) {
            tarto.parancs = tarto.parancs + " hossz='" + TartoHossz.getText() + "', ";
            tarto.parancs = tarto.parancs + " konzol1='" + konzol1.getText() + "', ";
            tarto.parancs = tarto.parancs + " konzol2='" + konzol2.getText() + "' ";
        }
        tarto.parancs = tarto.parancs + " where projekt = '" + tarto.ProjektNev + "' and ";
        tarto.parancs = tarto.parancs + " tartonev = '" + tarto.megnevezes + "'";
        query = session.createQuery(tarto.parancs);
        query.executeUpdate();

        float teljeshossz = tarto.tarto.get(0).getHossz() + tarto.tarto.get(0).getKonzol1() + tarto.tarto.get(0).getKonzol2();
        float ertek = 0f;   // Ez lesz a folyómétersúly

        // A tartóerők közül a (meg)lévő megoszló teher kitörlése 
        tarto.parancs = "delete FROM Tartoerok where projekt ='";
        tarto.parancs = tarto.parancs + tarto.ProjektNev + "' and tartonev = '" + tarto.megnevezes + "' and jelleg = '2' ";
        tarto.parancs = tarto.parancs + " and szelveny = '" + tarto.szelveny + "'";
        query = session.createQuery(tarto.parancs);
        query.executeUpdate();

        // Az új szelvény neve
        tarto.szelveny = szelvenyek_listaja.getSelectedItem().toString();
        // Az új tartó folyómétersúlyának kikeresése
        tarto.parancs = "FROM Szelveny where nev ='" + tarto.szelveny + "'";
        tarto.profil = session.createQuery(tarto.parancs).list();
        ertek = tarto.profil.get(0).getFmsuly() / 10000;
        // A profilnév frissítése        
        tarto.parancs = "update Tartok set szelveny = '" + szelvenyek_listaja.getSelectedItem().toString() + "' where projekt ='";
        tarto.parancs = tarto.parancs + tarto.ProjektNev + "' and tartonev = '" + tarto.megnevezes + "'";
        query = session.createQuery(tarto.parancs);
        query.executeUpdate();
        // Az új tartóerő bevitele          
        ujtartoero.setProjekt(tarto.ProjektNev.toString());
        ujtartoero.setTartonev(tarto.megnevezes.toString());
        ujtartoero.setSzelveny(tarto.szelveny);
        ujtartoero.setErtek(ertek);
        ujtartoero.setHely(0f);
        ujtartoero.setHossz(teljeshossz);
        ujtartoero.setJelleg(2);
        ujtartoero.setFelvitel(now);
        session.save(ujtartoero);
        // A Jtable frissítése
        megoszloadatok_tablatolto();
        session.getTransaction().commit();
        session.close();
        rajzol(0);
    }//GEN-LAST:event_tartoadat_modositasActionPerformed

    private void project_valtoztatasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_project_valtoztatasActionPerformed
        // TODO add your handling code here:
        // Az aktuális projekt bejelölése        
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        tarto.parancs = "update Projectek set aktiv = '0' where aktiv = '1'";
        query = session.createQuery(tarto.parancs);
        query.executeUpdate();
        tarto.parancs = "update Projectek set aktiv = '1' where projekt='";
        tarto.parancs = tarto.parancs + tartonevek_lista.getSelectedItem().toString() + "'";
        query = session.createQuery(tarto.parancs);
        query.executeUpdate();

        // Adattörlés
        tartonevek_lista.removeAll();
        TartoHossz.setText("");
        konzol1.setText("");
        konzol2.setText("");
        szelvenyek_listaja.setSelectedIndex(0);
        tarto.parancs = "FROM Tartok where projekt = '" + tarto.ProjektNev + "'";
        //System.out.println(parancs);
        List<Tartok> tartonevlista = session.createQuery(tarto.parancs).list();
        for (int i = 0; i < tartonevlista.size(); i++) {
            tartonevek_lista.addItem(tartonevlista.get(i).getTartonev());
        }
        session.getTransaction().commit();
        session.close();
        jTabbedPane1.setEnabled(false);
        feszultsegek.setEnabled(false);
        ero_nyomatek.setEnabled(false);
        alakvaltozas.setEnabled(false);
        // Az erők, nyomatékok és megoszlók törlése

    }//GEN-LAST:event_project_valtoztatasActionPerformed

    private void ero_nyomatekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ero_nyomatekActionPerformed
        // TODO add your handling code here:
        rajzol(0);
    }//GEN-LAST:event_ero_nyomatekActionPerformed

    private void feszultsegekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feszultsegekActionPerformed
        // TODO add your handling code here:
        rajzol(0);
    }//GEN-LAST:event_feszultsegekActionPerformed

    private void alakvaltozasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alakvaltozasActionPerformed
        // TODO add your handling code here:
        rajzol(0);
    }//GEN-LAST:event_alakvaltozasActionPerformed

    private void metszet_jeloloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metszet_jeloloActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) reszletesadatok.getModel();
        int i = tableModel.getRowCount();
        if (i > 0) {
            for (int k = 0; k < i; k++) {

                if ((Boolean) tableModel.getValueAt(k, 14) == true) {
                    //System.out.print("I:"+k+" kijelzés:"+tableModel.getValueAt(k, 14)+" ertek:"+tarto.metszekek.get(k).getKijelzes());
                    tarto.metszekek.get(k).setKijelzes(1);
                    //System.out.println(" ujertek:"+tarto.metszekek.get(k).getKijelzes());
                } else {
                    tarto.metszekek.get(k).setKijelzes(0);
                }
            }
        }
        reszletesadatok_tablatolto();
        /*for (i = 0; i < tarto.metszekszam; i++) {
            System.out.println("I:" + i + " kijelzés:" + tarto.metszekek.get(i).getKijelzes());
        } */
        rajzol(1);

    }//GEN-LAST:event_metszet_jeloloActionPerformed

    private void KilepesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KilepesActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_KilepesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ero_hozzaadas;
    private javax.swing.JButton Kilepes;
    private javax.swing.JButton Megoszlo_hozzaadas;
    private javax.swing.JButton Nyomatek_hozzaadas;
    private javax.swing.ButtonGroup Rajzmód;
    private javax.swing.JTextField TartoHossz;
    private javax.swing.JCheckBox alakvaltozas;
    private javax.swing.JCheckBox ero_nyomatek;
    private javax.swing.JTable erok;
    private javax.swing.JButton erok_modositasa;
    private javax.swing.JCheckBox feszultsegek;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField konzol1;
    private javax.swing.JTextField konzol2;
    private javax.swing.JButton metszet_jelolo;
    private javax.swing.JTable nyomatekok;
    private javax.swing.JButton nyomatekok_modositasa;
    private javax.swing.JLabel pngrajz;
    private javax.swing.JButton project_valtoztatas;
    private javax.swing.JComboBox projekt;
    private javax.swing.JTable reszletesadatok;
    private javax.swing.JComboBox szelvenyek_listaja;
    private javax.swing.JButton tarto_kivalasztas;
    private javax.swing.JButton tartoadat_modositas;
    private javax.swing.JComboBox tartonevek_lista;
    private javax.swing.JButton terhek_modositasa;
    private javax.swing.JTable terhelesek;
    private javax.swing.JTextField ujero;
    private javax.swing.JTextField ujerohely;
    private javax.swing.JTextField ujmegoszlo;
    private javax.swing.JTextField ujmegoszlohely;
    private javax.swing.JTextField ujmegoszlohossz;
    private javax.swing.JTextField ujnyomatek;
    private javax.swing.JTextField ujnyomatekhely;
    // End of variables declaration//GEN-END:variables
}
