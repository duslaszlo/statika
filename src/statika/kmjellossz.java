/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package statika;

import Entities.Osszetett;
import Entities.Szelveny;
import Hibernate.HibernateUtil;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import org.hibernate.Session;
import java.util.Date;

/**
 *
 * @author SD-LEAP
 */
public class kmjellossz extends javax.swing.JInternalFrame {

    /**
     * Creates new form kmjellossz
     */
    kmjellosszadatok profil = new kmjellosszadatok();

    String parancs;
    Query query;
    int result;
    Date now = new Date();

    public kmjellossz() {
        Session session = HibernateUtil.getSessionFactory().openSession();
        initComponents();
        fok.setText("0");
        diffx.setText("0");
        diffy.setText("0");
        osszetett_szelvenyek.removeAllItems();
        session.beginTransaction();
        // A szelvények feltöltése
        parancs = "FROM Szelveny order by nev";
        //System.out.println(parancs);
        profil.szelveny = session.createQuery(parancs).list();
        szelvenyek_listaja.addItem("Válassz");
        osszetett_szelvenyek.addItem("Válassz");
        for (Szelveny szelveny : profil.szelveny) {
            // A szelvénytár beolvasása
            if (!szelveny.getMegnevezes().equals("Összetett szelvény")) {
                if (szelveny.getMagassag() < (profil.maxmeret / 10)) {
                    szelvenyek_listaja.addItem(szelveny.getNev());
                }
            } else {
                osszetett_szelvenyek.addItem(szelveny.getNev());
            }
        }

        session.getTransaction().commit();
        session.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uj_osszetett = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        osszetett_szelvenyek = new javax.swing.JComboBox();
        Ujszelveny = new javax.swing.JButton();
        Szelveny_kivalaszt = new javax.swing.JButton();
        pngrajz = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        alkotoelemek = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        szelvenyek_listaja = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        diffx = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        diffy = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        forgatas = new javax.swing.JSlider();
        fok = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        Mirrorx = new javax.swing.JRadioButton();
        Mirrory = new javax.swing.JRadioButton();
        szelveny_hozzaad = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        Szelveny_modositas = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Összetett szelvény konfigurátor");

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel4.setText("Új összetett szelvény definiálás:");

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel2.setText("Meglévő összetett szelvény:");

        Ujszelveny.setText("Hozzáadás");
        Ujszelveny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UjszelvenyActionPerformed(evt);
            }
        });

        Szelveny_kivalaszt.setText("Kiválaszt");
        Szelveny_kivalaszt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Szelveny_kivalasztActionPerformed(evt);
            }
        });

        alkotoelemek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Szelvénynév", "DiffX", "DiffY", "Forgatás", "Tükr_X", "Tükr_Y", "Hiba", "Törlés"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(alkotoelemek);

        jLabel5.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel5.setText("Szelvény-hozzárendelés:");

        jLabel7.setText("Neve:");

        jLabel8.setText("Eltolás X:");

        jLabel9.setText("Eltolás Y:");

        jLabel10.setText("mm");

        jLabel11.setText("mm");

        jLabel12.setText("Forgatás:");

        forgatas.setMaximum(360);
        forgatas.setMinorTickSpacing(1);
        forgatas.setValue(0);
        forgatas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                forgatasStateChanged(evt);
            }
        });

        fok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fokActionPerformed(evt);
            }
        });

        jLabel13.setText("fok");

        Mirrorx.setText("Tükrözés X");

        Mirrory.setText("Tükrözés Y");

        szelveny_hozzaad.setText("Hozzárendelés");
        szelveny_hozzaad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                szelveny_hozzaadActionPerformed(evt);
            }
        });

        Szelveny_modositas.setText("Módosít");
        Szelveny_modositas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Szelveny_modositasActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel1.setText("Az összetett szelvény alkotóelemei:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/statika/exit1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Szelveny_modositas, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Mirrorx)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Mirrory)
                                .addGap(18, 18, 18)
                                .addComponent(szelveny_hozzaad, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(szelvenyek_listaja, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(diffx, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel10)
                                                .addGap(24, 24, 24)
                                                .addComponent(jLabel9))
                                            .addComponent(forgatas, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(fok, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel13))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(diffy, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel11))))))
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel4))
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(osszetett_szelvenyek, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Szelveny_kivalaszt, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(uj_osszetett, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Ujszelveny, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pngrajz, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pngrajz, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uj_osszetett, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Ujszelveny))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(osszetett_szelvenyek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Szelveny_kivalaszt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Szelveny_modositas)
                            .addComponent(jLabel1))
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(szelvenyek_listaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(diffx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(diffy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Mirrorx)
                                    .addComponent(Mirrory)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(forgatas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(szelveny_hozzaad)
                                    .addComponent(jButton1))))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void alkotoelemek_tablatorlo() {
        DefaultTableModel tableModel = (DefaultTableModel) alkotoelemek.getModel();
        int i = tableModel.getRowCount();
        if (i > 0) {
            for (int k = 0; k < i; k++) {
                tableModel.removeRow(0);
            }
        }
    }

    private void alkotoelemek_tablatolto() {
        DefaultTableModel tableModel = (DefaultTableModel) alkotoelemek.getModel();
        alkotoelemek_tablatorlo();
        profil.adatbeolvaso();
        for (int i = 0; i < profil.osszetett.size(); i++) {
            String[] data = new String[8];
            data[0] = String.valueOf(profil.osszetett.get(i).getBazis());
            data[1] = profil.osszetett.get(i).getNev();
            data[2] = String.valueOf(profil.osszetett.get(i).getDiffx());
            data[3] = String.valueOf(profil.osszetett.get(i).getDiffy());
            data[4] = String.valueOf(profil.osszetett.get(i).getSzog());
            if (String.valueOf(profil.osszetett.get(i).getHiba()) == "H") {
                data[7] = "Átfedés";
            } else {
                data[7] = " ";
            }
            tableModel.addRow(data);
            if (profil.osszetett.get(i).getMirrorx() == 1) {
                tableModel.setValueAt(true, i, 5);
            } else {
                tableModel.setValueAt(false, i, 5);
            }
            if (profil.osszetett.get(i).getMirrory() == 1) {
                tableModel.setValueAt(true, i, 6);
            } else {
                tableModel.setValueAt(false, i, 6);
            }
        }
        // A 2-4 -es oszlopok középre igazítása
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(uj_osszetett.CENTER);
        alkotoelemek.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        alkotoelemek.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        alkotoelemek.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
        // A tábla oszlopszélességei
        alkotoelemek.setAutoResizeMode(alkotoelemek.AUTO_RESIZE_OFF);
        alkotoelemek.getColumnModel().getColumn(0).setPreferredWidth(20);
        alkotoelemek.getColumnModel().getColumn(1).setPreferredWidth(105);
        alkotoelemek.getColumnModel().getColumn(2).setPreferredWidth(40);
        alkotoelemek.getColumnModel().getColumn(3).setPreferredWidth(40);
        alkotoelemek.getColumnModel().getColumn(4).setPreferredWidth(55);
        alkotoelemek.getColumnModel().getColumn(5).setPreferredWidth(45);
        alkotoelemek.getColumnModel().getColumn(6).setPreferredWidth(45);
        alkotoelemek.getColumnModel().getColumn(7).setPreferredWidth(45);
        alkotoelemek.getColumnModel().getColumn(8).setPreferredWidth(40);
        alkotoelemek.setModel(tableModel);
        alkotoelemek.setShowGrid(true);
    }

    private void szelveny_hozzaadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_szelveny_hozzaadActionPerformed
        // Az alszelvény hozzáadása
        Session session = HibernateUtil.getSessionFactory().openSession();
        Osszetett ujosszetett = new Osszetett();
        int db = 0;
        String szoveg;
        // Az első elem a báziselem
        for (Osszetett osszetett : profil.osszetett) {
            // A szelvénytár beolvasása
            if (osszetett.getBazis() > db) {
                db = osszetett.getBazis();
            }
        }
        if (db > 0) {
            db++;
        }
        profil.index++;
        // Szelvény lerögzítés
        session.beginTransaction();
        ujosszetett.setOssznev(profil.nev);
        ujosszetett.setNev(szelvenyek_listaja.getSelectedItem().toString());
        if (db != 0) {
            ujosszetett.setDiffx(Float.parseFloat(String.valueOf(diffx.getText())));
            ujosszetett.setDiffy(Float.parseFloat(String.valueOf(diffy.getText())));
        } else {
            ujosszetett.setDiffx(0f);
            ujosszetett.setDiffy(0f);
        }

        ujosszetett.setSzog(Integer.parseInt(fok.getText()));
        if (Mirrorx.isSelected()) {
            ujosszetett.setMirrorx(1);
        } else {
            ujosszetett.setMirrorx(0);
        }
        if (Mirrory.isSelected()) {
            ujosszetett.setMirrory(1);
        } else {
            ujosszetett.setMirrory(0);
        }
        ujosszetett.setFelvitel(now);
        ujosszetett.setBazis(db);
        session.save(ujosszetett);
        session.getTransaction().commit();
        session.close();

        // kirajzolás
        profil.pngrajz();
        //System.out.println(" forgatas:" + profil.forgatas + " mirrorx:" + profil.tukrozesx + "  mirrory:" + profil.tukrozesy);
        szoveg = "./images/szelveny/" + profil.filenev + ".png";
        //System.out.println(" filenevbe:" + szoveg);
        ImageIcon icon = new ImageIcon(szoveg, "A tartorajz");
        icon.getImage().flush();
        pngrajz.setIcon(icon);
        pngrajz.updateUI();
        // A Jtable feltöltése
        alkotoelemek_tablatolto();
    }//GEN-LAST:event_szelveny_hozzaadActionPerformed

    private void UjszelvenyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UjszelvenyActionPerformed
        //Az új összetett szelvény felvitele
        Session session = HibernateUtil.getSessionFactory().openSession();
        Szelveny ujszelveny = new Szelveny();
        DefaultTableModel tableModel = (DefaultTableModel) alkotoelemek.getModel();
        profil.nev = uj_osszetett.getText();
        profil.filenevbeiro();

        session.beginTransaction();
        ujszelveny.setNev(profil.nev);
        ujszelveny.setFilenev(profil.filenev);
        ujszelveny.setMegnevezes("Összetett szelvény");
        ujszelveny.setFelvitel(now);
        ujszelveny.setAnyag("Acélok");
        ujszelveny.setMegjegyzes(" ");
        session.save(ujszelveny);
        /*parancs = "INSERT INTO Szelveny (nev,filenev,magassag,szelesseg,v,r,r1,r2,w,w1,u,u1,u2,z,c,h1,t,tgalfa,A,ex,ey,Ix,Kx,Sx,inx,Iy,Ky,Sy,iny,fmsuly,anyag,megnevezes) VALUES('";
         parancs = parancs + profil.nev + "','";
         parancs = parancs + profil.filenev + "','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','','Összetett szelvény');";
         //System.out.println("SQL parancs: " + parancs);
         query = session.createQuery(parancs);
         result = query.executeUpdate();*/

        // A szelvények újrafeltöltése
        parancs = "FROM Szelveny order by nev";
        //System.out.println(parancs);
        profil.szelveny = session.createQuery(parancs).list();
        szelvenyek_listaja.addItem("Válassz");
        osszetett_szelvenyek.addItem("Válassz");
        for (Szelveny szelveny : profil.szelveny) {
            // A szelvénytár beolvasása
            if (!szelveny.getMegnevezes().equals("Összetett szelvény")) {
                szelvenyek_listaja.addItem(szelveny.getNev());
            } else {
                osszetett_szelvenyek.addItem(szelveny.getNev());
            }
        }

        session.getTransaction().commit();
        session.close();
        uj_osszetett.setText(" ");
        // Új szelvény esetén az előző adatait törölni kell
        if (tableModel.getRowCount() > 0) {
            int j = tableModel.getRowCount();
            for (int k = 0; k < j; k++) {
                tableModel.removeRow(0);
            }
            alkotoelemek.setModel(tableModel);
            alkotoelemek.setShowGrid(true);
        }
    }//GEN-LAST:event_UjszelvenyActionPerformed

    private void forgatasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_forgatasStateChanged
        // TODO add your handling code here:
        fok.setText(String.valueOf(forgatas.getValue()));
    }//GEN-LAST:event_forgatasStateChanged

    private void fokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fokActionPerformed
        // TODO add your handling code here:
        forgatas.setValue(Integer.parseInt(fok.getText()));
    }//GEN-LAST:event_fokActionPerformed

    private void Szelveny_modositasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Szelveny_modositasActionPerformed
        // TODO add your handling code here:
        Session session = HibernateUtil.getSessionFactory().openSession();
        String szoveg;
        DefaultTableModel tableModel = (DefaultTableModel) alkotoelemek.getModel();
        if (tableModel.getRowCount() > 0) {
            session.beginTransaction();
            // A Jtable-ben lévő adatok módosítása
            int j = tableModel.getRowCount();
            for (int k = 0; k < j; k++) {
                String[] data = new String[7];
                data[0] = tableModel.getValueAt(k, 0).toString();
                data[1] = tableModel.getValueAt(k, 1).toString();
                data[2] = tableModel.getValueAt(k, 2).toString();
                data[3] = tableModel.getValueAt(k, 3).toString();
                data[4] = tableModel.getValueAt(k, 4).toString();
                if (k == 0) {
                    data[2] = "0";
                    data[3] = "0";
                    data[4] = "0";
                }
                data[5] = "0";
                if (tableModel.getValueAt(k, 5).toString().equals("true")) {
                    data[5] = "1";
                }
                data[6] = "0";
                if (tableModel.getValueAt(k, 6).toString().equals("true")) {
                    data[6] = "1";
                    //System.out.println("data[6]_: " + data[6]);
                }
                //System.out.println("data[6]: " + tableModel.getValueAt(k, 6));   

                if (tableModel.getValueAt(k, 8) != null) {
                    // Adattörlés
                    parancs = "delete from Osszetett where bazis='" + data[0] + "' and ";
                    parancs = profil.parancs + "ossznev = '" + profil.nev + "'";
                    System.out.println("SQL parancs: " + parancs);
                    query = session.createQuery(parancs);
                    result = query.executeUpdate();

                } else {
                    // Adatmódosítás                   
                    // A tartó adatai
                    parancs = "update Osszetett set szog='" + data[4] + "', ";
                    if (!data[0].equals("0")) {
                        parancs = parancs + "diffx='" + data[2] + "', ";
                        parancs = parancs + "diffy='" + data[3] + "', ";
                    }
                    if (data[5].equals("0")) {
                        parancs = parancs + "mirrorx='0', ";
                    } else {
                        parancs = parancs + "mirrorx='1', ";
                    }
                    if (data[6].equals("0")) {
                        parancs = parancs + "mirrory='0', ";
                    } else {
                        parancs = parancs + "mirrory='1', ";
                    }
                    parancs = parancs + "nev = '" + data[1] + "' ";
                    parancs = parancs + "where bazis = '" + data[0] + "' and ";
                    parancs = parancs + "ossznev = '" + profil.nev + "'";
                    query = session.createQuery(parancs);
                    result = query.executeUpdate();
                }
            }
            // Jtable frissítése
            alkotoelemek_tablatolto();
            // Rajzolás
            profil.pngrajz();
            szoveg = "./images/szelveny/" + profil.filenev + ".png";
            //System.out.println(" filenevbe:" + szoveg);
            ImageIcon icon = new ImageIcon(szoveg, "A tartorajz");
            icon.getImage().flush();
            pngrajz.setIcon(icon);
            pngrajz.updateUI();
            session.getTransaction().commit();
            session.close();
        }
    }//GEN-LAST:event_Szelveny_modositasActionPerformed

    private void Szelveny_kivalasztActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Szelveny_kivalasztActionPerformed
        // TODO add your handling code here:
        Session session = HibernateUtil.getSessionFactory().openSession();
        String szoveg;
        profil.index = 0;
        profil.nev = osszetett_szelvenyek.getSelectedItem().toString();
        //profil.filenevbeiro();
        // Ha van hozzárendelve szelvény, akkor Jtable + rajzolás
        session.beginTransaction();
        parancs = "FROM Osszetett where ossznev = '" + profil.nev + "'";
        //System.out.println(parancs);
        List<Osszetett> osszetett = session.createQuery(parancs).list();
        for (Osszetett osszetett1 : osszetett) {
            profil.index++;
        }
        // A filenév beolvasása
        parancs = "FROM Szelveny where nev = '" + profil.nev + "'";
        //System.out.println(parancs);
        List<Szelveny> szelveny = session.createQuery(parancs).list();
        for (Szelveny szelveny1 : szelveny) {
            profil.filenev = szelveny1.getFilenev();
        }
        session.getTransaction().commit();
        session.close();

        if (profil.index != 0) {
            // Rajzolás
            profil.pngrajz();
            //System.out.println(" forgatas:" + profil.forgatas + " mirrorx:" + profil.tukrozesx + "  mirrory:" + profil.tukrozesy);
            szoveg = "./images/szelveny/" + profil.filenev + ".png";
            //System.out.println(" filenevbe:" + szoveg);
            ImageIcon icon = new ImageIcon(szoveg, "A tartorajz");
            icon.getImage().flush();
            pngrajz.setIcon(icon);
            pngrajz.updateUI();
            // Jtable adatfeltöltes
            alkotoelemek_tablatolto();

        }
    }//GEN-LAST:event_Szelveny_kivalasztActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Mirrorx;
    private javax.swing.JRadioButton Mirrory;
    private javax.swing.JButton Szelveny_kivalaszt;
    private javax.swing.JButton Szelveny_modositas;
    private javax.swing.JButton Ujszelveny;
    private javax.swing.JTable alkotoelemek;
    private javax.swing.JTextField diffx;
    private javax.swing.JTextField diffy;
    private javax.swing.JTextField fok;
    private javax.swing.JSlider forgatas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox osszetett_szelvenyek;
    private javax.swing.JLabel pngrajz;
    private javax.swing.JButton szelveny_hozzaad;
    private javax.swing.JComboBox szelvenyek_listaja;
    private javax.swing.JTextField uj_osszetett;
    // End of variables declaration//GEN-END:variables
}
