/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package statika;

import Hibernate.HibernateUtil;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;

/**
 *
 * @author duslaszlo
 */
public class drotvaz extends javax.swing.JInternalFrame {

    /**
     * Creates new form drotvaz
     */
    drotvazadatok vaz = new drotvazadatok();
    Session session = HibernateUtil.getSessionFactory().openSession();
    String parancs;

    public drotvaz() {
        initComponents();
        // A jComboBox1 feltöltése
        session.beginTransaction();
        parancs = "Select distinct projekt FROM Rud";
        //System.out.println(parancs);
        List<String> rud = session.createQuery(parancs).list();
        for (int i = 0; i < rud.size(); i++) {
            projekt_lista.addItem(rud.get(i));
        }
        parancs = "Select distinct azonosito FROM Rud Where projekt = '" + rud.get(0) + "' order by azonosito";
        //System.out.println(parancs);
        List<String> rudlist = session.createQuery(parancs).list();
        for (int i = 0; i < rudlist.size(); i++) {
            drotvazak.addItem(rudlist.get(i));
        }
        session.getTransaction().commit();
        session.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        drotvazak = new javax.swing.JComboBox();
        nezet = new javax.swing.JLabel();
        drotvaz_kivalaszt = new javax.swing.JButton();
        alaphelyzet = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        rudak = new javax.swing.JTable();
        rudkivalaszto = new javax.swing.JButton();
        pngkep = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        projekt_lista = new javax.swing.JComboBox();
        projekt_kivalaszto = new javax.swing.JButton();
        Kodosito = new javax.swing.JToggleButton();
        vastagvonalak = new javax.swing.JToggleButton();
        jSlider1 = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Rácsos szerkezetek drótvázainak megjelenítése");
        setToolTipText("");

        jLabel1.setText("Drótváz:");

        nezet.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                nezetMouseWheelMoved(evt);
            }
        });
        nezet.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                nezetMouseDragged(evt);
            }
        });

        drotvaz_kivalaszt.setText("Lássuk");
        drotvaz_kivalaszt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drotvaz_kivalasztActionPerformed(evt);
            }
        });

        alaphelyzet.setText("Alaphelyzet");
        alaphelyzet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alaphelyzetActionPerformed(evt);
            }
        });

        rudak.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Kezdőcsp.", "Végcsp.", "Szelvény", "Kijelzés"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(rudak);

        rudkivalaszto.setText("Megjelöl");
        rudkivalaszto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rudkivalasztoActionPerformed(evt);
            }
        });

        pngkep.setText("PNG-kép");
        pngkep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pngkepActionPerformed(evt);
            }
        });

        jLabel2.setText("Projekt:");

        projekt_kivalaszto.setText("Kiválaszt");
        projekt_kivalaszto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projekt_kivalasztoActionPerformed(evt);
            }
        });

        Kodosito.setText("Ködös rajz");
        Kodosito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KodositoActionPerformed(evt);
            }
        });

        vastagvonalak.setText("Vastag vonal");
        vastagvonalak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vastagvonalakActionPerformed(evt);
            }
        });

        jSlider1.setMaximum(1000);
        jSlider1.setMinimum(1);
        jSlider1.setValue(100);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Eltolás");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/statika/exit1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(14, 14, 14)
                                .addComponent(projekt_lista, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(drotvazak, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(drotvaz_kivalaszt, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(projekt_kivalaszto, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Kodosito, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alaphelyzet, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vastagvonalak, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pngkep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(nezet, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(rudkivalaszto))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(projekt_lista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(projekt_kivalaszto))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(drotvazak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(drotvaz_kivalaszt))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nezet, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(alaphelyzet)
                                            .addComponent(pngkep))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Kodosito)
                                            .addComponent(vastagvonalak)))
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rudkivalaszto))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kepkitevo() {
        vaz.pngrajz();
        ImageIcon icon = new ImageIcon(vaz.bi);
        icon.getImage().flush();
        nezet.setIcon(icon);
        nezet.updateUI();
    }

    private void drotvaz_kivalasztActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drotvaz_kivalasztActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) rudak.getModel();
        vaz.nev = drotvazak.getSelectedItem().toString();
        vaz.adatbeolvaso();
        int j = tableModel.getRowCount();
        for (int k = 0; k < j; k++) {
            tableModel.removeRow(0);
        }
        for (int i = 1; i <= vaz.rud.size(); i++) {
            String[] data = new String[3];
            data[0] = String.valueOf(vaz.rud.get(i - 1).getKezdocsp());
            data[1] = String.valueOf(vaz.rud.get(i - 1).getVegecsp());
            data[2] = vaz.rud.get(i - 1).getSzelveny();
            tableModel.addRow(data);
            if (vaz.rud.get(i - 1).getKek() == 1) {
                tableModel.setValueAt(true, i - 1, 3);
            } else {
                tableModel.setValueAt(false, i - 1, 3);
            }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        //centerRenderer.setHorizontalAlignment(x_fok.CENTER);
        rudak.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        rudak.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        rudak.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        rudak.setAutoResizeMode(rudak.AUTO_RESIZE_OFF);
        rudak.getColumnModel().getColumn(0).setPreferredWidth(60);
        rudak.getColumnModel().getColumn(1).setPreferredWidth(60);
        rudak.getColumnModel().getColumn(2).setPreferredWidth(90);
        rudak.getColumnModel().getColumn(3).setPreferredWidth(50);
        rudak.setModel(tableModel);
        rudak.setShowGrid(true);
        kepkitevo();
    }//GEN-LAST:event_drotvaz_kivalasztActionPerformed

    private void rudkivalasztoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rudkivalasztoActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) rudak.getModel();
        for (int i = 0; i < vaz.rud.size(); i++) {
            //System.out.println(" javítva:" + tableModel.getValueAt(i, 3).toString());
            if (tableModel.getValueAt(i, 3).toString().equals("true")) {
                vaz.rud.get(i).setAnyag(1);
            } else {
                vaz.rud.get(i).setAnyag(0);
            }
        }
        kepkitevo();
    }//GEN-LAST:event_rudkivalasztoActionPerformed

    private void alaphelyzetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alaphelyzetActionPerformed
        // TODO add your handling code here:
        vaz.forgatas[1] = 0;
        vaz.forgatas[2] = 0;
        vaz.forgatas[3] = 0;
        kepkitevo();
    }//GEN-LAST:event_alaphelyzetActionPerformed

    private void pngkepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pngkepActionPerformed
        // TODO add your handling code here:
        vaz.pngfile();
    }//GEN-LAST:event_pngkepActionPerformed

    private void nezetMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nezetMouseDragged
        //System.out.println("X:"+evt.getX()+"  Y:"+evt.getY());
        if (SwingUtilities.isLeftMouseButton(evt)) {
            // forgatás
            if ((vaz.mx == 0) || (vaz.my == 0)) {
                vaz.mx = evt.getX();
                vaz.my = evt.getY();
            } else {
                if (evt.getX() > vaz.mx) {
                    vaz.forgatas[2]++;
                    if (vaz.forgatas[2] > 360) {
                        vaz.forgatas[2] = 0;
                    }
                    vaz.mx = evt.getX();
                }
                if (evt.getX() < vaz.mx) {
                    vaz.forgatas[2]--;
                    if (vaz.forgatas[2] < 0) {
                        vaz.forgatas[2] = 360;
                    }
                    vaz.mx = evt.getX();
                }
                if (evt.getY() > vaz.my) {
                    vaz.forgatas[3]--;
                    if (vaz.forgatas[3] < 0) {
                        vaz.forgatas[3] = 360;
                    }
                    vaz.my = evt.getY();
                }
                if (evt.getY() < vaz.my) {
                    vaz.forgatas[3]++;
                    if (vaz.forgatas[3] > 360) {
                        vaz.forgatas[3] = 0;
                    }
                    vaz.my = evt.getY();
                }
                kepkitevo();
            }
        }
        if (SwingUtilities.isRightMouseButton(evt)) {
            //mozgatás 
            if ((vaz.tx == 0) || (vaz.ty == 0)) {
                vaz.tx = evt.getX();
                vaz.ty = evt.getY();
            } else {
                if (evt.getX() > vaz.tx) {
                    vaz.kepkozep[0]++;
                    vaz.tx = evt.getX();
                }
                if (evt.getX() < vaz.tx) {
                    vaz.kepkozep[0]--;
                    vaz.tx = evt.getX();
                }
                if (evt.getY() > vaz.ty) {
                    vaz.kepkozep[1]++;
                    vaz.ty = evt.getY();
                }
                if (evt.getY() < vaz.ty) {
                    vaz.kepkozep[1]--;
                    vaz.ty = evt.getY();
                }
                kepkitevo();
            }
        }
        if (SwingUtilities.isMiddleMouseButton(evt)) {
            // Alaphelyzet visszaállítás
            vaz.kepkozep[0] = 0;
            vaz.kepkozep[1] = 0;
            vaz.forgatas[2] = 0;
            vaz.forgatas[3] = 0;
            vaz.kepnagyitas = 1;
            kepkitevo();
        }
        //System.out.println(" x_forg:"+vaz.forgatas[2]+"  y_forg:"+vaz.forgatas[3]);

    }//GEN-LAST:event_nezetMouseDragged

    private void nezetMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_nezetMouseWheelMoved
        // TODO add your handling code here:
        if (evt.getWheelRotation() < 0) {
            vaz.kepnagyitas /= 0.5;
        } else {
            vaz.kepnagyitas *= 0.5;
        }
        kepkitevo();
    }//GEN-LAST:event_nezetMouseWheelMoved

    private void projekt_kivalasztoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projekt_kivalasztoActionPerformed
        // TODO add your handling code here:
        Session session = HibernateUtil.getSessionFactory().openSession();
        drotvazak.removeAllItems();
        drotvazak.addItem("Válassz");
        session.beginTransaction();
        parancs = "Select distinct azonosito FROM Rud Where projekt = '" + projekt_lista.getSelectedItem() + "' order by azonosito";
        //System.out.println(parancs);
        List<String> rud = session.createQuery(parancs).list();
        for (int i = 0; i < rud.size(); i++) {
            drotvazak.addItem(rud.get(i));
        }
        session.getTransaction().commit();
        session.close();
    }//GEN-LAST:event_projekt_kivalasztoActionPerformed

    private void KodositoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KodositoActionPerformed
        // TODO add your handling code here:
        if (Kodosito.isSelected()) {
            Kodosito.setText("Normál rajz");
        } else {
            Kodosito.setText("Ködös rajz");
        }
        vaz.rajztipus = !vaz.rajztipus;
        kepkitevo();
    }//GEN-LAST:event_KodositoActionPerformed

    private void vastagvonalakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vastagvonalakActionPerformed
        // TODO add your handling code here:
        if (vastagvonalak.isSelected()) {
            vastagvonalak.setText("Vékony vonal");
        } else {
            vastagvonalak.setText("Vastag vonal");
        }
        vaz.vastagvonal = !vaz.vastagvonal;
        kepkitevo();
    }//GEN-LAST:event_vastagvonalakActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton Kodosito;
    private javax.swing.JButton alaphelyzet;
    private javax.swing.JButton drotvaz_kivalaszt;
    private javax.swing.JComboBox drotvazak;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel nezet;
    private javax.swing.JButton pngkep;
    private javax.swing.JButton projekt_kivalaszto;
    private javax.swing.JComboBox projekt_lista;
    private javax.swing.JTable rudak;
    private javax.swing.JButton rudkivalaszto;
    private javax.swing.JToggleButton vastagvonalak;
    // End of variables declaration//GEN-END:variables
}
